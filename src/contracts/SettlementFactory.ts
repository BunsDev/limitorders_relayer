/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Settlement, SettlementInterface } from "./Settlement";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderBookChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_orderBookAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginOrderBookAddress",
        type: "address",
      },
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "_sovrynSwapNetwork",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WRBTC",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeSplitTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    name: "MarginOrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "loanTokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverageAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenSent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "MarginTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "OrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sourceToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_targetToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_sourceTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_targetTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WRBTC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allCanceledHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "canceledOfHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "loanId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "leverageAmount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "loanTokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "loanTokenSent",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralTokenSent",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "collateralTokenAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "trader",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "minReturn",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "loanDataBytes",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createdTimestamp",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct MarginOrders.Order",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ISettlement.FillMarginOrderArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "fillMarginOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "principalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "maker",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "toToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "created",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Orders.Order",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amountToFillIn",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
        ],
        internalType: "struct ISettlement.FillOrderArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "maker",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "toToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountOutMin",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "created",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Orders.Order",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amountToFillIn",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
        ],
        internalType: "struct ISettlement.FillOrderArgs[]",
        name: "args",
        type: "tuple[]",
      },
    ],
    name: "fillOrders",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "filledAmountInOfHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBookMarginAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sovrynSwapNetwork",
    outputs: [
      {
        internalType: "contract ISovrynSwapNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052600060c05260026008553480156200001b57600080fd5b50604051620028b5380380620028b58339810160408190526200003e9162000174565b600080516020620028958339815191527f84ec3e40ac87b7e93d40b42ac60cbcf224a757106614dac5eb0cc5fc9be1f03c60008051602062002875833981519152878760405160200162000097959493929190620001e7565b60408051601f19818403018152908290528051602091820120608052620001079160008051602062002895833981519152917fc3d2193d7dc1c02a389e4c7ff50299645338a7ae45c7a25b141b7be6720567cf9160008051602062002875833981519152918a91899101620001e7565b60408051808303601f19018152919052805160209091012060a052600580546001600160a01b03199081166001600160a01b03948516179091556004805482169284169290921790915560068054821694831694909417909355600780549093169116179055506200022c565b600080600080600060a086880312156200018c578081fd5b855194506020860151620001a08162000213565b6040870151909450620001b38162000213565b6060870151909350620001c68162000213565b6080870151909250620001d98162000213565b809150509295509295909350565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6001600160a01b03811681146200022957600080fd5b50565b60805160a05160c05160601c61260f6200026660003980610c1c52508061054552806108785250806107dd5280610c98525061260f6000f3fe60806040526004361061010c5760003560e01c8063841f375e11610095578063c276d7e211610064578063c276d7e2146102c4578063e2517aea146102f1578063e4f1b71314610306578063ef1774a214610326578063f340fa011461033b5761012e565b8063841f375e1461024c5780639409d87014610261578063a88d295414610276578063ae72211f146102a45761012e565b8063685f93bd116100dc578063685f93bd146101c257806370a08231146101e25780637489ec231461020257806379eaf6d4146102225780637a25914c146102375761012e565b8062c5ddfb146101335780632e1a7d4d1461015e5780633090fceb1461017e57806334093126146101a05761012e565b3661012e576004546001600160a01b0316331461012c5761012c33610349565b005b600080fd5b34801561013f57600080fd5b506101486103e0565b6040516101559190611f1f565b60405180910390f35b34801561016a57600080fd5b5061012c610179366004611d18565b6103ef565b34801561018a57600080fd5b506101936104eb565b6040516101559190611fd8565b3480156101ac57600080fd5b506101b5610543565b6040516101559190612027565b3480156101ce57600080fd5b506101b56101dd366004611d18565b610567565b3480156101ee57600080fd5b506101b56101fd366004611c30565b610579565b34801561020e57600080fd5b5061012c61021d366004611d18565b61058b565b34801561022e57600080fd5b506101486107cc565b34801561024357600080fd5b506101b56107db565b34801561025857600080fd5b506101486107ff565b34801561026d57600080fd5b5061014861080e565b34801561028257600080fd5b50610296610291366004611d30565b61081d565b604051610155929190612521565b3480156102b057600080fd5b506101936102bf366004611c6f565b610b2f565b3480156102d057600080fd5b506102e46102df366004611d18565b610c05565b604051610155919061201c565b3480156102fd57600080fd5b50610148610c1a565b34801561031257600080fd5b506101b5610321366004611e0f565b610c3e565b34801561033257600080fd5b506101b5611255565b61012c610349366004611c30565b34806103705760405162461bcd60e51b8152600401610367906122cc565b60405180910390fd5b336001600160a01b038316156103835750815b6001600160a01b03811660009081526003602052604090819020805484019055517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906103d39085908590611f33565b60405180910390a1505050565b6007546001600160a01b031681565b3360008181526003602052604090205482111561041e5760405162461bcd60e51b815260040161036790612303565b6000816001600160a01b03168360405161043790611f1c565b60006040518083038185875af1925050503d8060008114610474576040519150601f19603f3d011682016040523d82523d6000602084013e610479565b606091505b505090508061049a5760405162461bcd60e51b815260040161036790612397565b6001600160a01b0382166000908152600360205260409081902080548590039055517f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65906103d39084908690611f33565b6060600180548060200260200160405190810160405280929190818152602001828054801561053957602002820191906000526020600020905b815481526020019060010190808311610525575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020526000908152604090205481565b60036020526000908152604090205481565b60008181526020819052604090205460ff16156105ba5760405162461bcd60e51b815260040161036790612249565b60065460405163044f8a6360e11b81526001600160a01b0390911690600090829063089f14c6906105ef908690600401612027565b60206040518083038186803b15801561060757600080fd5b505afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190611c53565b90506001600160a01b0381161561067d57336001600160a01b038216146106785760405162461bcd60e51b815260040161036790612171565b610755565b600754604051631b4b840f60e31b81526001600160a01b0390911690600090829063da5c2078906106b2908890600401612027565b60206040518083038186803b1580156106ca57600080fd5b505afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107029190611c53565b90506001600160a01b03811661072a5760405162461bcd60e51b8152600401610367906124bc565b336001600160a01b038216146107525760405162461bcd60e51b815260040161036790612171565b50505b600083815260208190526040808220805460ff19166001908117909155805480820182559083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018590555184917f30ad15c39984aa59d60d4089cbbbaa503c4c9e0fa0e3bdf62a5bab180fcb974d91a2505050565b6005546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b031681565b6006546001600160a01b031681565b60008033321461083f5760405162461bcd60e51b8152600401610367906123ea565b600061084e846000015161125b565b905061085a84826112ee565b83516101608101516101808201516101a0909201516000926108a0927f000000000000000000000000000000000000000000000000000000000000000092869290611384565b90506001600160a01b038116158015906108ca5750845160c001516001600160a01b038281169116145b6108e65760405162461bcd60e51b8152600401610367906122a1565b845160a081015160c08201516080909201516040516323b872dd60e01b815291926001600160a01b038416926323b872dd926109289291309190600401611f4c565b602060405180830381600087803b15801561094257600080fd5b505af1158015610956573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097a9190611cf8565b5060006109a66103e86109a06008548a600001516080015161140d90919063ffffffff16565b9061144a565b8751608001519091506000906109bc9083611482565b90506109cc8860000151826114a5565b895160a0810151604080830151602084015160c0909401519151959c50939a506001600160a01b039182169491909316927fee3e7d75896ef6d41fca2ee701efb7acc57c88734d898da78caff6233faf31b592610a3092909187918e918e9161254e565b60405180910390a360405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb90610a669033908690600401611f33565b602060405180830381600087803b158015610a8057600080fd5b505af1158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190611cf8565b50875160800151600086815260026020526040902054610ad7916117d0565b60008681526002602052604090819020919091555185907f3a89c5924d54728d3d6e3f76c364e773f89a707831221a16cdc50623f52f55b990610b1d908a908a90612521565b60405180910390a25050505050915091565b60606000825167ffffffffffffffff81118015610b4b57600080fd5b50604051908082528060200260200182016040528015610b75578160200160208202803683370190505b50915060005b8351811015610be157610ba0848281518110610b9357fe5b6020026020010151610c3e565b838281518110610bac57fe5b6020026020010181815250506000838281518110610bc657fe5b60200260200101511115610bd957600191505b600101610b7b565b5080610bff5760405162461bcd60e51b815260040161036790612416565b50919050565b60006020819052908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000333214610c5f5760405162461bcd60e51b8152600401610367906123ea565b6000610c6e83600001516117f3565b9050610c7a8382611854565b825161010081015161012082015161014090920151600092610cc0927f000000000000000000000000000000000000000000000000000000000000000092869290611384565b90506001600160a01b03811615801590610ce757508351516001600160a01b038281169116145b610d035760405162461bcd60e51b8152600401610367906122a1565b6005546040808601518651606001519151637f9c0ecd60e01b81526000936001600160a01b031692637f9c0ecd92610d4092909190600401611f70565b60206040518083038186803b158015610d5857600080fd5b505afa158015610d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d909190611e4a565b855160800151909150811015610db85760405162461bcd60e51b8152600401610367906124ea565b600454604086015180516001600160a01b0390921691829190600090610dda57fe5b60200260200101516001600160a01b03161415610eba578551606081015190516001600160a01b03166000908152600360205260409020541015610e305760405162461bcd60e51b815260040161036790612303565b806001600160a01b031663d0e30db08760000151606001516040518263ffffffff1660e01b81526004016000604051808303818588803b158015610e7357600080fd5b505af1158015610e87573d6000803e3d6000fd5b50508851606081015190516001600160a01b03166000908152600360205260409020805491909103905550610f66915050565b8560400151600081518110610ecb57fe5b60200260200101516001600160a01b03166323b872dd876000015160000151308960000151606001516040518463ffffffff1660e01b8152600401610f1293929190611f4c565b602060405180830381600087803b158015610f2c57600080fd5b505af1158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f649190611cf8565b505b6000610f8b6103e86109a06008548a600001516060015161140d90919063ffffffff16565b875160600151909150600090610fa19083611482565b885160a0015160045460408b0151805193945091926001600160a01b0390911691906000198101908110610fd157fe5b60200260200101516001600160a01b03161415610feb5750305b60008060006110088c60400151868e6000015160800151876118cd565b9250925092508b6040015160008151811061101f57fe5b60200260200101516001600160a01b031663a9059cbb33886040518363ffffffff1660e01b8152600401611054929190611f33565b602060405180830381600087803b15801561106e57600080fd5b505af1158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190611cf8565b506004546001600160a01b038381169116141561118057604051632e1a7d4d60e01b81526001600160a01b03881690632e1a7d4d906110e9908490600401612027565b600060405180830381600087803b15801561110357600080fd5b505af1158015611117573d6000803e3d6000fd5b505050508b6000015160a001516001600160a01b03168160405161113a90611f1c565b60006040518083038185875af1925050503d8060008114611177576040519150601f19603f3d011682016040523d82523d6000602084013e61117c565b606091505b5050505b816001600160a01b0316836001600160a01b03167fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d08784336040516111c79392919061252f565b60405180910390a36020808d015160008c815260029092526040909120546111ee916117d0565b600260008c815260200190815260200160002081905550809a50897fb38583f2adb435cac858db9d3e8d3ca952ccb32307e2f3d0053b415d2d2934818d602001518d60405161123e929190612521565b60405180910390a250505050505050505050919050565b60085481565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01516101008b01516101208c01516101408d0151985160009c6112d19c7fe30dcb91507ed7c8a9a2019b56e407eee8294529022e84f18b5420374e1784049c919b919a99989796959493920161207d565b604051602081830303815290604052805190602001209050919050565b815161012001514211156113145760405162461bcd60e51b8152600401610367906123c3565b60008181526020819052604090205460ff16156113435760405162461bcd60e51b81526004016103679061219e565b81516080015160008281526002602052604090205461136290826117d0565b11156113805760405162461bcd60e51b815260040161036790612494565b5050565b600080868660405160200161139a929190611f01565b604051602081830303815290604052805190602001209050600181868686604051600081526020016040526040516113d59493929190612124565b6020604051602081039080840390855afa1580156113f7573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b60008115806114285750508082028282828161142557fe5b04145b6114445760405162461bcd60e51b8152600401610367906121c6565b92915050565b60008115806114665750828283858161145f57fe5b0492508202145b6114445760405162461bcd60e51b815260040161036790612331565b808203828111156114445760405162461bcd60e51b815260040161036790612142565b6000806000846040015190508460a001516001600160a01b031663095ea7b382866040518363ffffffff1660e01b81526004016114e3929190611f33565b602060405180830381600087803b1580156114fd57600080fd5b505af1158015611511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115359190611cf8565b506060850151156116c6576000816001600160a01b031663797bf3856040518163ffffffff1660e01b815260040160206040518083038186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b39190611c53565b9050806001600160a01b03166323b872dd8760c001513089606001516040518463ffffffff1660e01b81526004016115ed93929190611f4c565b602060405180830381600087803b15801561160757600080fd5b505af115801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f9190611cf8565b50606086015160405163095ea7b360e01b81526001600160a01b0383169163095ea7b391611671918691600401611f33565b602060405180830381600087803b15801561168b57600080fd5b505af115801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c39190611cf8565b50505b6060856000015186602001518760600151878960a001518a60c001518b60e001518c61010001516040516024016117049897969594939291906120e2565b60408051601f198184030181529181526020820180516001600160e01b03166328a02f1960e01b179052519091506000906060906001600160a01b0385169061174e908590611ec8565b6000604051808303816000865af19150503d806000811461178b576040519150601f19603f3d011682016040523d82523d6000602084013e611790565b606091505b5091509150816117ad5780516117a557600080fd5b805181602001fd5b808060200190518101906117c19190611e62565b90999098509650505050505050565b808201828110156114445760405162461bcd60e51b815260040161036790612273565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a015195516000996112d1997fd6dcdb8a8034d5997072fdf38e109521eb631713bc0470668aa787bb502b623c9991989197969594939201612030565b815160c001514211156118795760405162461bcd60e51b8152600401610367906123c3565b60008181526020819052604090205460ff16156118a85760405162461bcd60e51b81526004016103679061219e565b81516060015160208084015160008481526002909252604090912054611362916117d0565b60008060006002875110156118f45760405162461bcd60e51b81526004016103679061243f565b8660008151811061190157fe5b602002602001015192508660018851038151811061191b57fe5b60200260200101519150816001600160a01b0316836001600160a01b031614156119575760405162461bcd60e51b8152600401610367906121f4565b60055460405163095ea7b360e01b81526001600160a01b038581169263095ea7b39261198b92909116908a90600401611f33565b602060405180830381600087803b1580156119a557600080fd5b505af11580156119b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119dd9190611cf8565b6119f95760405162461bcd60e51b815260040161036790612368565b60055460405163b77d239b60e01b81526001600160a01b039091169063b77d239b90611a34908a908a908a908a906000908190600401611f92565b602060405180830381600087803b158015611a4e57600080fd5b505af1158015611a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a869190611e4a565b90509450945094915050565b8035611444816125c1565b600082601f830112611aad578081fd5b8135611ac0611abb826125a1565b61257a565b818152915060208083019084810181840286018201871015611ae157600080fd5b60005b84811015611b09578135611af7816125c1565b84529282019290820190600101611ae4565b505050505092915050565b60008183036101a0811215611b27578182fd5b611b31606061257a565b915061016080821215611b4357600080fd5b611b4c8161257a565b9150611b588585611a92565b8252611b678560208601611a92565b6020830152611b798560408601611a92565b60408301526060840135606083015260808401356080830152611b9f8560a08601611a92565b60a083015260c084013560c083015260e084013560e0830152610100611bc786828701611c1f565b9083015261012084810135908301526101408085013590830152908252820135602082015261018082013567ffffffffffffffff811115611c0757600080fd5b611c1384828501611a9d565b60408301525092915050565b803560ff8116811461144457600080fd5b600060208284031215611c41578081fd5b8135611c4c816125c1565b9392505050565b600060208284031215611c64578081fd5b8151611c4c816125c1565b60006020808385031215611c81578182fd5b823567ffffffffffffffff811115611c97578283fd5b8301601f81018513611ca7578283fd5b8035611cb5611abb826125a1565b81815283810190838501865b84811015611cea57611cd88a888435890101611b14565b84529286019290860190600101611cc1565b509098975050505050505050565b600060208284031215611d09578081fd5b81518015158114611c4c578182fd5b600060208284031215611d29578081fd5b5035919050565b60006101c0808385031215611d43578182fd5b611d4d602061257a565b611d568261257a565b91508335825260208401356020830152611d738560408601611a92565b60408301526060840135606083015260808401356080830152611d998560a08601611a92565b60a0830152611dab8560c08601611a92565b60c083015260e08481013590830152610100808501359083015261012080850135908301526101408085013590830152610160611dea86828701611c1f565b9083015261018084810135908301526101a09384013593820193909352825250919050565b600060208284031215611e20578081fd5b813567ffffffffffffffff811115611e36578182fd5b611e4284828501611b14565b949350505050565b600060208284031215611e5b578081fd5b5051919050565b60008060408385031215611e74578081fd5b505080516020909101519092909150565b6000815180845260208085019450808401835b83811015611ebd5781516001600160a01b031687529582019590820190600101611e98565b509495945050505050565b60008251815b81811015611ee85760208186018101518583015201611ece565b81811115611ef65782828501525b509190910192915050565b61190160f01b81526002810192909252602282015260420190565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060408252611f836040830185611e85565b90508260208301529392505050565b600060c08252611fa560c0830189611e85565b60208301979097525060408101949094526001600160a01b0392831660608501529116608083015260a090910152919050565b6020808252825182820181905260009190848201906040850190845b8181101561201057835183529284019291840191600101611ff4565b50909695505050505050565b901515815260200190565b90815260200190565b9889526001600160a01b0397881660208a015295871660408901529386166060880152608087019290925260a086015290921660c084015260e08301919091526101008201526101200190565b9b8c5260208c019a909a5260408b01989098526001600160a01b0396871660608b015260808a019590955260a089019390935290841660c088015290921660e08601526101008501919091526101208401526101408301526101608201526101800190565b9788526020880196909652604087019490945260608601929092526001600160a01b0390811660808601521660a084015260c083015260e08201526101000190565b93845260ff9290921660208401526040830152606082015260800190565b60208082526015908201527464732d6d6174682d7375622d756e646572666c6f7760581b604082015260600190565b6020808252601390820152723737ba16b1b0b63632b216b13c96b6b0b5b2b960691b604082015260600190565b6020808252600e908201526d1bdc99195c8b58d85b98d95b195960921b604082015260600190565b60208082526014908201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604082015260600190565b60208082526035908201527f4c696d69743a20736f75726365546f6b656e20616e6420746172676574546f6b604082015274656e2063616e6e6f74206265207468652073616d6560581b606082015260800190565b60208082526010908201526f185b1c9958591e4b58d85b98d95b195960821b604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b602080825260119082015270696e76616c69642d7369676e617475726560781b604082015260600190565b60208082526017908201527f6465706f7369742d616d6f756e742d7265717569726564000000000000000000604082015260600190565b602080825260149082015273696e73756666696369656e742d62616c616e636560601b604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526015908201527422b93937b91030b8383937bb34b733903a37b5b2b760591b604082015260600190565b6020808252601290820152713330b4b632b216ba3796ba3930b739b332b960711b604082015260600190565b6020808252600d908201526c1bdc99195c8b595e1c1a5c9959609a1b604082015260600190565b60208082526012908201527118d85b1b19590b589e4b58dbdb9d1c9858dd60721b604082015260600190565b6020808252600f908201526e1b9bcb5bdc99195c8b599a5b1b1959608a1b604082015260600190565b60208082526035908201527f4c696d69743a205f636f6e76657273696f6e50617468206d75737420636f6e7460408201527461696e206174206c65617374203220746f6b656e7360581b606082015260800190565b6020808252600e908201526d185b1c9958591e4b599a5b1b195960921b604082015260600190565b6020808252601490820152731bdc99195c8b5a185cda0b5b9bdd0b595e1a5cdd60621b604082015260600190565b60208082526017908201527f696e73756666696369656e742d616d6f756e742d6f7574000000000000000000604082015260600190565b918252602082015260400190565b92835260208301919091526001600160a01b0316604082015260600190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60405181810167ffffffffffffffff8111828210171561259957600080fd5b604052919050565b600067ffffffffffffffff8211156125b7578081fd5b5060209081020190565b6001600160a01b03811681146125d657600080fd5b5056fea26469706673582212206afdf4cf4eaba97e4d23c84312ff9f69ab01bc9ad8a44eef1475bdde114f749164736f6c634300060c0033c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc68b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f";

export class SettlementFactory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    orderBookChainId: BigNumberish,
    _orderBookAddress: string,
    _marginOrderBookAddress: string,
    _sovrynSwapNetwork: string,
    _WRBTC: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Settlement> {
    return super.deploy(
      orderBookChainId,
      _orderBookAddress,
      _marginOrderBookAddress,
      _sovrynSwapNetwork,
      _WRBTC,
      overrides || {}
    ) as Promise<Settlement>;
  }
  getDeployTransaction(
    orderBookChainId: BigNumberish,
    _orderBookAddress: string,
    _marginOrderBookAddress: string,
    _sovrynSwapNetwork: string,
    _WRBTC: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      orderBookChainId,
      _orderBookAddress,
      _marginOrderBookAddress,
      _sovrynSwapNetwork,
      _WRBTC,
      overrides || {}
    );
  }
  attach(address: string): Settlement {
    return super.attach(address) as Settlement;
  }
  connect(signer: Signer): SettlementFactory {
    return super.connect(signer) as SettlementFactory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementInterface {
    return new utils.Interface(_abi) as SettlementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Settlement {
    return new Contract(address, _abi, signerOrProvider) as Settlement;
  }
}
