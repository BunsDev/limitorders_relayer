/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OrderBook, OrderBookInterface } from "./OrderBook";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "allHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Orders.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "getMaker",
    outputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "hashesOfFromToken",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "hashesOfMaker",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "hashesOfToToken",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfAllHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
    ],
    name: "numberOfHashesOfFromToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "numberOfHashesOfMaker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
    ],
    name: "numberOfHashesOfToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderOfHash",
    outputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "created",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051469061008c907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f907f84ec3e40ac87b7e93d40b42ac60cbcf224a757106614dac5eb0cc5fc9be1f03c907fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc690859030906020016100ad565b60408051601f198184030181529190528051602090910120608052506100d9565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6080516110536100f86000398061034a52806104ba52506110536000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80635fd45d24116100715780635fd45d241461015057806365f7a5511461016357806375af1c3614610176578063b76b14711461017e578063bceb45db14610193578063df4c1b41146101bd576100b4565b806303e0992f146100b95780630777aa32146100e2578063089f14c6146100f557806314eaa868146101155780633644e515146101355780633d91efcf1461013d575b600080fd5b6100cc6100c7366004610b93565b6101d0565b6040516100d99190610db1565b60405180910390f35b6100cc6100f0366004610b93565b6101eb565b610108610103366004610be1565b610206565b6040516100d99190610cef565b610128610123366004610bae565b6102b6565b6040516100d99190610d6d565b6100cc610348565b6100cc61014b366004610b93565b61036c565b61012861015e366004610bae565b610387565b610128610171366004610bae565b61040f565b6100cc610497565b61019161018c366004610bf9565b61049d565b005b6101a66101a1366004610be1565b6106f9565b6040516100d99b9a99989796959493929190610d03565b6101286101cb366004610cb3565b610766565b6001600160a01b031660009081526002602052604090205490565b6001600160a01b031660009081526001602052604090205490565b6000610210610b0f565b505060009081526004602081815260409283902083516101608101855281546001600160a01b039081168083526001840154821694830194909452600283015481169582019590955260038201546060820152928101546080840152600581015490931660a0830152600683015460c0830152600783015460e0830152600883015460ff166101008301526009830154610120830152600a909201546101409091015290565b6060610340838360026000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561032c57602002820191906000526020600020905b815481526020019060010190808311610318575b50505050506107d49092919063ffffffff16565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b031660009081526003602052604090205490565b6060610340838360016000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561032c57602002820191906000526020600020908154815260200190600101908083116103185750505050506107d49092919063ffffffff16565b6060610340838360036000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561032c57602002820191906000526020600020908154815260200190600101908083116103185750505050506107d49092919063ffffffff16565b60005490565b6104a681610893565b60006104b182610a08565b905060006104f17f000000000000000000000000000000000000000000000000000000000000000083856101000151866101200151876101400151610a86565b90506001600160a01b03811615801590610517575082516001600160a01b038281169116145b61053c5760405162461bcd60e51b815260040161053390610ef0565b60405180910390fd5b6000828152600460205260409020546001600160a01b0316156105715760405162461bcd60e51b815260040161053390610e25565b6000828152600460208181526040808420875181546001600160a01b03199081166001600160a01b039283161783558985018051600180860180548516928616929092179091558b860180516002808801805487169288169290921790915560608e015160038089019190915560808f01519a88019a909a5560a08e01516005880180549096169087161790945560c08d0151600687015560e08d015160078701556101008d015160088701805460ff191660ff9092169190911790556101208d015160098701556101408d0151600a9096019590955588548082018a558980527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018b90558b518416895280875285892080548083018255908a52878a20018b9055905183168852908552838720805480830182559088528588200189905591511685529282528084208054938401815584529083209091018490555183917f918554b6bd6e2895ce6553de5de0e1a69db5289aa0e4fe193a0dcd1f1434747791a2505050565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009890154600a909901546001600160a01b039889169a9789169996891698959695909416949293919260ff909116918b565b60606107cb8383600080548060200260200160405190810160405280929190818152602001828054801561032c57602002820191906000526020600020908154815260200190600101908083116103185750505050506107d49092919063ffffffff16565b90505b92915050565b60608167ffffffffffffffff811180156107ed57600080fd5b50604051908082528060200260200182016040528015610817578160200160208202803683370190505b50905060005b8281101561088b578451818486020110610852576000801b82828151811061084157fe5b602002602001018181525050610883565b8481848602018151811061086257fe5b602002602001015182828151811061087657fe5b6020026020010181815250505b60010161081d565b509392505050565b80516001600160a01b03166108ba5760405162461bcd60e51b815260040161053390610ec9565b60208101516001600160a01b03166108e45760405162461bcd60e51b815260040161053390610fca565b60408101516001600160a01b031661090e5760405162461bcd60e51b815260040161053390610e9f565b80604001516001600160a01b031681602001516001600160a01b031614156109485760405162461bcd60e51b815260040161053390610f4b565b600081606001511161096c5760405162461bcd60e51b815260040161053390610f9f565b60008160800151116109905760405162461bcd60e51b815260040161053390610f1b565b60a08101516001600160a01b03166109ba5760405162461bcd60e51b815260040161053390610e4b565b61012c42038160e0015110156109e25760405162461bcd60e51b815260040161053390610e76565b428160c0015111610a055760405162461bcd60e51b815260040161053390610f75565b50565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01519551600099610a69997fd6dcdb8a8034d5997072fdf38e109521eb631713bc0470668aa787bb502b623c9991989197969594939201610dba565b604051602081830303815290604052805190602001209050919050565b6000808686604051602001610a9c929190610cd4565b60405160208183030381529060405280519060200120905060018186868660405160008152602001604052604051610ad79493929190610e07565b6020604051602081039080840390855afa158015610af9573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290526101008101829052610120810182905261014081019190915290565b80356001600160a01b03811681146107ce57600080fd5b803560ff811681146107ce57600080fd5b600060208284031215610ba4578081fd5b6107cb8383610b6b565b600080600060608486031215610bc2578182fd5b610bcc8585610b6b565b95602085013595506040909401359392505050565b600060208284031215610bf2578081fd5b5035919050565b6000610160808385031215610c0c578182fd5b610c1581610ff6565b9050610c218484610b6b565b8152610c308460208501610b6b565b6020820152610c428460408501610b6b565b60408201526060830135606082015260808301356080820152610c688460a08501610b6b565b60a082015260c083013560c082015260e083013560e0820152610100610c9085828601610b82565b908201526101208381013590820152610140928301359281019290925250919050565b60008060408385031215610cc5578182fd5b50508035926020909101359150565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039b8c168152998b1660208b0152978a1660408a0152606089019690965260808801949094529190961660a086015260c085019590955260e084019490945260ff9093166101008301526101208201929092526101408101919091526101600190565b6020808252825182820181905260009190848201906040850190845b81811015610da557835183529284019291840191600101610d89565b50909695505050505050565b90815260200190565b9889526001600160a01b0397881660208a015295871660408901529386166060880152608087019290925260a086015290921660c084015260e08301919091526101008201526101200190565b93845260ff9290921660208401526040830152606082015260800190565b6020808252600c908201526b6f726465722d65786973747360a01b604082015260600190565b6020808252601190820152701a5b9d985b1a590b5c9958da5c1a595b9d607a1b604082015260600190565b6020808252600f908201526e1a5b9d985b1a590b58dc99585d1959608a1b604082015260600190565b60208082526010908201526f34b73b30b634b216ba3796ba37b5b2b760811b604082015260600190565b6020808252600d908201526c34b73b30b634b216b6b0b5b2b960991b604082015260600190565b602080825260119082015270696e76616c69642d7369676e617475726560781b604082015260600190565b60208082526016908201527534b73b30b634b216b0b6b7bab73a16b7baba16b6b4b760511b604082015260600190565b60208082526010908201526f6475706c69636174652d746f6b656e7360801b604082015260600190565b60208082526010908201526f696e76616c69642d646561646c696e6560801b604082015260600190565b60208082526011908201527034b73b30b634b216b0b6b7bab73a16b4b760791b604082015260600190565b60208082526012908201527134b73b30b634b216b33937b696ba37b5b2b760711b604082015260600190565b60405181810167ffffffffffffffff8111828210171561101557600080fd5b60405291905056fea2646970667358221220923216aee20c22bc302acb017608d49e8f532ea4ca66e33598d8dfedacc5b79264736f6c634300060c0033";

export class OrderBookFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrderBook> {
    return super.deploy(overrides || {}) as Promise<OrderBook>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrderBook {
    return super.attach(address) as OrderBook;
  }
  connect(signer: Signer): OrderBookFactory {
    return super.connect(signer) as OrderBookFactory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new utils.Interface(_abi) as OrderBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBook {
    return new Contract(address, _abi, signerOrProvider) as OrderBook;
  }
}
